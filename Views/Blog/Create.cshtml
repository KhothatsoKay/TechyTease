@model Blog.Models.BlogModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Post</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Blog"  asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AuthorName"></label>
                <input asp-for="AuthorName" class="form-control" value="@User.Identity.Name" readonly />
            </div>
            <div id="imageUploadContainer" class="form-group">
              <input type="file" name="files" multiple />
           </div>
            <button type="button" onclick="addImageUpload()">Add More Images</button>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
 <script>
        function addImageUpload() {
            var container = document.getElementById("imageUploadContainer");
            var input = document.createElement("input");
            input.type = "file";
            input.name = "files";
            container.appendChild(input);
        }
    </script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
